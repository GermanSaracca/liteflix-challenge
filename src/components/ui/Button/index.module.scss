@use '../../../sass/variables/colors';
@use '../../../sass/variables/animations';

.button {
	$button_width: 248px;
	$animation_duration: 300ms;

	display: flex;
	align-items: center;
	justify-content: center;
	gap: 12px;
	width: $button_width;
	min-width: $button_width;
	padding: 21px 10px 17px;
	border: none;
	font-size: 18px;
	font-weight: 400;
	letter-spacing: 4px;
	transition: all 100ms ease-in-out;
	position: relative;
	cursor: pointer;

	svg {
		display: inline-block;
		vertical-align: middle;
	}

	&:disabled {
		cursor: not-allowed;
		opacity: 0.5;
	}

	&:active {
		transform: scale(0.95);
	}

	&.light_variant {
		color: colors.$primary;
		background-color: colors.$white;

		&:hover::before,
		&:hover::after {
			border-width: 0.225rem;
		}
	}
	&.dark_variant {
		color: colors.$white;
		background-color: colors.$primary;

		&:hover {
			color: colors.$secondary;
		}
	}
	&.transparent_variant {
		color: colors.$white;
		background-color: change-color($color: colors.$primary, $alpha: 0.6);
		outline: solid 1px change-color($color: colors.$white, $alpha: 0.5);

		&:hover {
			color: colors.$secondary;
			outline: none;
		}
	}

	&.dark_variant,
	&.light_variant,
	&.transparent_variant {
		&:hover::before,
		&:hover::after {
			border-color: colors.$secondary;
		}
	}

	// Border effect

	&::before,
	&::after {
		display: block;
		content: ' ';
		border-top: none;
		border-right: none;
		border-bottom: none;
		border-left: none;
		position: absolute;
		width: 0;
		height: 0;
		opacity: 0;
		transition: opacity 200ms ease-in-out;
	}

	&::before {
		bottom: 0;
		left: 0;
	}

	&::after {
		bottom: 0;
		left: 0;
	}

	&:hover::before {
		width: $button_width;
		height: 100%;
		opacity: 1;
		border-left: 0.125rem solid;
		border-top: 0.125rem solid;
		transition: height $animation_duration cubic-bezier(0.07, 0.62, 0.61, 1),
			width $animation_duration $animation_duration cubic-bezier(0.07, 0.62, 0.61, 1);
	}
	&:hover::after {
		width: $button_width;
		height: 100%;
		opacity: 1;
		border-bottom: 0.125rem solid;
		border-right: 0.125rem solid;
		transition: width $animation_duration cubic-bezier(0.07, 0.62, 0.61, 1),
			height calc($animation_duration/2) $animation_duration cubic-bezier(0.07, 0.62, 0.61, 1);
	}

	// DEDICATED ANIMATIONS
	&.animate_width {
		width: 0;
		min-width: 0;
		padding-inline: 0;
		margin-right: $button_width;
		overflow: hidden;
		animation: grow-width 1s ease forwards;
		animation-delay: #{animations.$animation-presentation-duration}ms;

		@keyframes grow-width {
			to {
				width: $button_width;
				min-width: $button_width;
				margin-right: 0;
				padding: 21px 10px 17px;
			}
		}

		& > * {
			opacity: 0;
			animation: fade-in 1s ease forwards;
			animation-delay: #{calc(animations.$animation-presentation-duration * 1.2)}ms;

			@keyframes fade-in {
				to {
					opacity: 1;
				}
			}
		}
	}

	&.fade_in {
		opacity: 0;

		animation: fade-in 1s ease forwards;
		animation-delay: #{animations.$animation-presentation-duration}ms;

		@keyframes fade-in {
			to {
				opacity: 1;
			}
		}
	}
}
